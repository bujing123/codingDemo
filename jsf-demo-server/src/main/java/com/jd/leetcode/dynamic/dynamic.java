package com.jd.leetcode.dynamic;


/**
 *
 * 动态规划
 *
 * 对于动态规划问题，我将拆解为如下五步曲，这五步都搞清楚了，才能说把动态规划真的掌握了！
 *
 * 1、确定dp数组（dp table）以及下标的含义
 * 2、确定递推公式
 * 3、dp数组如何初始化
 * 4、确定遍历顺序
 * 5、举例推导dp数组
 */
public class dynamic {


    /**
     * 求装满背包有几种方法的情况下，递推公式一般为：多少种说明需要累加
     *
     * dp[j] += dp[j - nums[i]];
     */

    /**
     * 求和的最大值 \ 最小值 情况下，最大值 、 最小值说明需要比较
     *
     * dp[j] = Math.max(dp[j], value[i] + dp[j-weight[i]])
     */


    /**
     *
     * 如果求组合数就是外层for循环遍历物品，内层for遍历背包。
     *
     * 如果求排列数就是外层for遍历背包，内层for循环遍历物品。
     *
     */

    /**
     *
     * 01背包： 一个数字只能使用一次，遍历顺序需要倒序，这样子不会重复计第i个数字
     *
     * 完全背包：一个数字可以使用多次，正序
     */

}
